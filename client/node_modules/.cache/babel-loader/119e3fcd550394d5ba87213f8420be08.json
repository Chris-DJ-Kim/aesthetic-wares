{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junio\\\\Desktop\\\\aesthetic-wares\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./sign-up.styles.scss\";\nimport PersonalizedButton from \"../personalized-button/personalized-button.component\";\nimport CustomFormInput from \"../custom-form-input/custom-form-input.component\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    message: \"\"\n  });\n  const {\n    email,\n    password,\n    confirmPassword,\n    message\n  } = userCredentials;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials(...userCredentials, [name]);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      setUserCredentials({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        message: \"Passwords don't match!\"\n      });\n      alert({\n        message\n      });\n      return;\n    }\n\n    signUpStart({\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CustomFormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomFormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomFormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PersonalizedButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")), message));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/junio/Desktop/aesthetic-wares/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","PersonalizedButton","CustomFormInput","signUpStart","SignUp","userCredentials","setUserCredentials","email","password","confirmPassword","message","handleChange","event","name","value","target","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,uBAAP;AAEA,OAAOC,kBAAP,MAA+B,sDAA/B;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AAEA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAqB;AAClC,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC;AACrDQ,IAAAA,KAAK,EAAE,EAD8C;AAErDC,IAAAA,QAAQ,EAAE,EAF2C;AAGrDC,IAAAA,eAAe,EAAE,EAHoC;AAIrDC,IAAAA,OAAO,EAAE;AAJ4C,GAAD,CAAtD;AAOA,QAAM;AAAEH,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,eAAnB;AAAoCC,IAAAA;AAApC,MAAgDL,eAAtD;;AAEA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAT,IAAAA,kBAAkB,CAAC,GAAGD,eAAJ,EAAsB,CAACQ,IAAD,CAAtB,CAAlB;AACD,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAOJ,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACK,cAAN;;AAEA,QAAIT,QAAQ,KAAKC,eAAjB,EAAkC;AAChCH,MAAAA,kBAAkB,CAAC;AACjBC,QAAAA,KAAK,EAAE,EADU;AAEjBC,QAAAA,QAAQ,EAAE,EAFO;AAGjBC,QAAAA,eAAe,EAAE,EAHA;AAIjBC,QAAAA,OAAO,EAAE;AAJQ,OAAD,CAAlB;AAMAQ,MAAAA,KAAK,CAAC;AAAER,QAAAA;AAAF,OAAD,CAAL;AACA;AACD;;AAEDP,IAAAA,WAAW,CAAC;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAX;AACD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAET,KAHT;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,QAAQ,EAAEI,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEH,QAHT;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,QAAQ,EAAEG,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,KAAK,EAAEF,eAHT;AAIE,IAAA,KAAK,EAAC,kBAJR;AAKE,IAAA,QAAQ,EAAEE,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAsBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAtBF,EAyBGD,OAzBH,CAFF,CADF;AAgCD,CAhED;;AAkEA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,WAAW,EAAGE,eAAD,IAAqBe,QAAQ,CAACjB,WAAW,CAACE,eAAD,CAAZ;AADF,CAAf,CAA3B;;AAIA,eAAeL,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./sign-up.styles.scss\";\r\n\r\nimport PersonalizedButton from \"../personalized-button/personalized-button.component\";\r\nimport CustomFormInput from \"../custom-form-input/custom-form-input.component\";\r\n\r\nimport { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const { email, password, confirmPassword, message } = userCredentials;\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserCredentials(...userCredentials, ([name]: value));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setUserCredentials({\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        message: \"Passwords don't match!\",\r\n      });\r\n      alert({ message });\r\n      return;\r\n    }\r\n\r\n    signUpStart({ email, password });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <CustomFormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          label=\"Email\"\r\n          onChange={handleChange}\r\n        />\r\n        <CustomFormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          label=\"Password\"\r\n          onChange={handleChange}\r\n        />\r\n        <CustomFormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          label=\"Confirm Password\"\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"button\">\r\n          <PersonalizedButton>Sign Up</PersonalizedButton>\r\n        </div>\r\n        {message}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}