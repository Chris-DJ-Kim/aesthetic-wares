{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junio\\\\Desktop\\\\aesthetic-wares\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport ShopItem from \"../../components/shop-item/shop-item.component\";\nimport { selectMerchandise } from \"../../redux/shop/shop.selectors\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const merchandiseRef = firestore.collection(\"merchandise\");\n    merchandiseRef.onSnapshot(async snaphot => {\n      const merchandiseMap = convertCollectionSnapshotToMap(snaphot);\n    });\n  }\n\n  render() {\n    const {\n      merchandise\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, merchandise.map(({\n      id,\n      label,\n      items\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ShopItem, {\n      label: label,\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  merchandise: selectMerchandise\n});\nexport default connect(mapStateToProps)(Shop);","map":{"version":3,"sources":["C:/Users/junio/Desktop/aesthetic-wares/src/pages/shop/shop.component.jsx"],"names":["React","connect","createStructuredSelector","ShopItem","selectMerchandise","firestore","convertCollectionSnapshotToMap","Shop","Component","unsubscribeFromSnapshot","componentDidMount","merchandiseRef","collection","onSnapshot","snaphot","merchandiseMap","render","merchandise","props","map","id","label","items","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,gDAArB;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;;AAKA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,uBADiC,GACP,IADO;AAAA;;AAEjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,cAAc,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAvB;AACAD,IAAAA,cAAc,CAACE,UAAf,CAA0B,MAAOC,OAAP,IAAmB;AAC3C,YAAMC,cAAc,GAAGT,8BAA8B,CAACQ,OAAD,CAArD;AACD,KAFD;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,WAAW,CAACE,GAAZ,CAAgB,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAAD,kBACf;AAAK,MAAA,GAAG,EAAEF,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAwB,MAAA,KAAK,EAAEC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF;AASD;;AApBgC;;AAuBnC,MAAMC,eAAe,GAAGrB,wBAAwB,CAAC;AAC/Ce,EAAAA,WAAW,EAAEb;AADkC,CAAD,CAAhD;AAIA,eAAeH,OAAO,CAACsB,eAAD,CAAP,CAAyBhB,IAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport ShopItem from \"../../components/shop-item/shop-item.component\";\r\n\r\nimport { selectMerchandise } from \"../../redux/shop/shop.selectors\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nclass Shop extends React.Component {\r\n  unsubscribeFromSnapshot = null;\r\n  componentDidMount() {\r\n    const merchandiseRef = firestore.collection(\"merchandise\");\r\n    merchandiseRef.onSnapshot(async (snaphot) => {\r\n      const merchandiseMap = convertCollectionSnapshotToMap(snaphot);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { merchandise } = this.props;\r\n    return (\r\n      <div>\r\n        {merchandise.map(({ id, label, items }) => (\r\n          <div key={id}>\r\n            <ShopItem label={label} items={items} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  merchandise: selectMerchandise,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Shop);\r\n"]},"metadata":{},"sourceType":"module"}